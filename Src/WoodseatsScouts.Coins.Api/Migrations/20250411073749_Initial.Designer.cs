// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoodseatsScouts.Coins.Api.Data;

#nullable disable

namespace WoodseatsScouts.Coins.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250411073749_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Base")
                        .HasColumnType("int");

                    b.Property<int>("BaseValueId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasComputedColumnSql("'C' + (FORMAT([BaseValueId], '0000'))  + (FORMAT([Base], '000')) + (FORMAT([Value], '000'))");

                    b.Property<DateTime?>("LockUntil")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "France"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LoggedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clue1State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clue2State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clue3State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("'M' + (FORMAT(TroopId, '000'))  + [SectionId] + (FORMAT(Number, '000'))");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayVisitor")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("SectionId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("TroopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("TroopId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.MemberCountryVote", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VotedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("MemberCountryVotes");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ScavengeResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("ScavengeResults");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ScavengedCoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<int>("ScavengeResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScavengeResultId");

                    b.ToTable("ScavengedCoins");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Section", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("char(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Troop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Troops");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Coin", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Member", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Troop", "Troop")
                        .WithMany("Members")
                        .HasForeignKey("TroopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Troop");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.MemberCountryVote", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ScavengeResult", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.Member", "Member")
                        .WithMany("ScavengeResults")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ScavengedCoin", b =>
                {
                    b.HasOne("WoodseatsScouts.Coins.Api.Models.Domain.ScavengeResult", "ScavengeResult")
                        .WithMany("ScavengedCoins")
                        .HasForeignKey("ScavengeResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScavengeResult");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Member", b =>
                {
                    b.Navigation("ScavengeResults");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.ScavengeResult", b =>
                {
                    b.Navigation("ScavengedCoins");
                });

            modelBuilder.Entity("WoodseatsScouts.Coins.Api.Models.Domain.Troop", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
